// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition"

// DATE "10/12/2023 21:45:42"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module SX (
	bits16,
	bits32);
input 	[15:0] bits16;
output 	[31:0] bits32;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \bits32[0]~output_o ;
wire \bits32[1]~output_o ;
wire \bits32[2]~output_o ;
wire \bits32[3]~output_o ;
wire \bits32[4]~output_o ;
wire \bits32[5]~output_o ;
wire \bits32[6]~output_o ;
wire \bits32[7]~output_o ;
wire \bits32[8]~output_o ;
wire \bits32[9]~output_o ;
wire \bits32[10]~output_o ;
wire \bits32[11]~output_o ;
wire \bits32[12]~output_o ;
wire \bits32[13]~output_o ;
wire \bits32[14]~output_o ;
wire \bits32[15]~output_o ;
wire \bits32[16]~output_o ;
wire \bits32[17]~output_o ;
wire \bits32[18]~output_o ;
wire \bits32[19]~output_o ;
wire \bits32[20]~output_o ;
wire \bits32[21]~output_o ;
wire \bits32[22]~output_o ;
wire \bits32[23]~output_o ;
wire \bits32[24]~output_o ;
wire \bits32[25]~output_o ;
wire \bits32[26]~output_o ;
wire \bits32[27]~output_o ;
wire \bits32[28]~output_o ;
wire \bits32[29]~output_o ;
wire \bits32[30]~output_o ;
wire \bits32[31]~output_o ;
wire \bits16[0]~input_o ;
wire \bits16[1]~input_o ;
wire \bits16[2]~input_o ;
wire \bits16[3]~input_o ;
wire \bits16[4]~input_o ;
wire \bits16[5]~input_o ;
wire \bits16[6]~input_o ;
wire \bits16[7]~input_o ;
wire \bits16[8]~input_o ;
wire \bits16[9]~input_o ;
wire \bits16[10]~input_o ;
wire \bits16[11]~input_o ;
wire \bits16[12]~input_o ;
wire \bits16[13]~input_o ;
wire \bits16[14]~input_o ;
wire \bits16[15]~input_o ;


cycloneive_io_obuf \bits32[0]~output (
	.i(\bits16[0]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[0]~output .bus_hold = "false";
defparam \bits32[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[1]~output (
	.i(\bits16[1]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[1]~output .bus_hold = "false";
defparam \bits32[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[2]~output (
	.i(\bits16[2]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[2]~output .bus_hold = "false";
defparam \bits32[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[3]~output (
	.i(\bits16[3]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[3]~output .bus_hold = "false";
defparam \bits32[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[4]~output (
	.i(\bits16[4]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[4]~output .bus_hold = "false";
defparam \bits32[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[5]~output (
	.i(\bits16[5]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[5]~output .bus_hold = "false";
defparam \bits32[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[6]~output (
	.i(\bits16[6]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[6]~output .bus_hold = "false";
defparam \bits32[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[7]~output (
	.i(\bits16[7]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[7]~output .bus_hold = "false";
defparam \bits32[7]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[8]~output (
	.i(\bits16[8]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[8]~output .bus_hold = "false";
defparam \bits32[8]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[9]~output (
	.i(\bits16[9]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[9]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[9]~output .bus_hold = "false";
defparam \bits32[9]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[10]~output (
	.i(\bits16[10]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[10]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[10]~output .bus_hold = "false";
defparam \bits32[10]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[11]~output (
	.i(\bits16[11]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[11]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[11]~output .bus_hold = "false";
defparam \bits32[11]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[12]~output (
	.i(\bits16[12]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[12]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[12]~output .bus_hold = "false";
defparam \bits32[12]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[13]~output (
	.i(\bits16[13]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[13]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[13]~output .bus_hold = "false";
defparam \bits32[13]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[14]~output (
	.i(\bits16[14]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[14]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[14]~output .bus_hold = "false";
defparam \bits32[14]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[15]~output (
	.i(\bits16[15]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[15]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[15]~output .bus_hold = "false";
defparam \bits32[15]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[16]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[16]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[16]~output .bus_hold = "false";
defparam \bits32[16]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[17]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[17]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[17]~output .bus_hold = "false";
defparam \bits32[17]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[18]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[18]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[18]~output .bus_hold = "false";
defparam \bits32[18]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[19]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[19]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[19]~output .bus_hold = "false";
defparam \bits32[19]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[20]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[20]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[20]~output .bus_hold = "false";
defparam \bits32[20]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[21]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[21]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[21]~output .bus_hold = "false";
defparam \bits32[21]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[22]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[22]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[22]~output .bus_hold = "false";
defparam \bits32[22]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[23]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[23]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[23]~output .bus_hold = "false";
defparam \bits32[23]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[24]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[24]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[24]~output .bus_hold = "false";
defparam \bits32[24]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[25]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[25]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[25]~output .bus_hold = "false";
defparam \bits32[25]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[26]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[26]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[26]~output .bus_hold = "false";
defparam \bits32[26]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[27]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[27]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[27]~output .bus_hold = "false";
defparam \bits32[27]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[28]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[28]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[28]~output .bus_hold = "false";
defparam \bits32[28]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[29]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[29]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[29]~output .bus_hold = "false";
defparam \bits32[29]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[30]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[30]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[30]~output .bus_hold = "false";
defparam \bits32[30]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \bits32[31]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bits32[31]~output_o ),
	.obar());
// synopsys translate_off
defparam \bits32[31]~output .bus_hold = "false";
defparam \bits32[31]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \bits16[0]~input (
	.i(bits16[0]),
	.ibar(gnd),
	.o(\bits16[0]~input_o ));
// synopsys translate_off
defparam \bits16[0]~input .bus_hold = "false";
defparam \bits16[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[1]~input (
	.i(bits16[1]),
	.ibar(gnd),
	.o(\bits16[1]~input_o ));
// synopsys translate_off
defparam \bits16[1]~input .bus_hold = "false";
defparam \bits16[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[2]~input (
	.i(bits16[2]),
	.ibar(gnd),
	.o(\bits16[2]~input_o ));
// synopsys translate_off
defparam \bits16[2]~input .bus_hold = "false";
defparam \bits16[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[3]~input (
	.i(bits16[3]),
	.ibar(gnd),
	.o(\bits16[3]~input_o ));
// synopsys translate_off
defparam \bits16[3]~input .bus_hold = "false";
defparam \bits16[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[4]~input (
	.i(bits16[4]),
	.ibar(gnd),
	.o(\bits16[4]~input_o ));
// synopsys translate_off
defparam \bits16[4]~input .bus_hold = "false";
defparam \bits16[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[5]~input (
	.i(bits16[5]),
	.ibar(gnd),
	.o(\bits16[5]~input_o ));
// synopsys translate_off
defparam \bits16[5]~input .bus_hold = "false";
defparam \bits16[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[6]~input (
	.i(bits16[6]),
	.ibar(gnd),
	.o(\bits16[6]~input_o ));
// synopsys translate_off
defparam \bits16[6]~input .bus_hold = "false";
defparam \bits16[6]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[7]~input (
	.i(bits16[7]),
	.ibar(gnd),
	.o(\bits16[7]~input_o ));
// synopsys translate_off
defparam \bits16[7]~input .bus_hold = "false";
defparam \bits16[7]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[8]~input (
	.i(bits16[8]),
	.ibar(gnd),
	.o(\bits16[8]~input_o ));
// synopsys translate_off
defparam \bits16[8]~input .bus_hold = "false";
defparam \bits16[8]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[9]~input (
	.i(bits16[9]),
	.ibar(gnd),
	.o(\bits16[9]~input_o ));
// synopsys translate_off
defparam \bits16[9]~input .bus_hold = "false";
defparam \bits16[9]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[10]~input (
	.i(bits16[10]),
	.ibar(gnd),
	.o(\bits16[10]~input_o ));
// synopsys translate_off
defparam \bits16[10]~input .bus_hold = "false";
defparam \bits16[10]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[11]~input (
	.i(bits16[11]),
	.ibar(gnd),
	.o(\bits16[11]~input_o ));
// synopsys translate_off
defparam \bits16[11]~input .bus_hold = "false";
defparam \bits16[11]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[12]~input (
	.i(bits16[12]),
	.ibar(gnd),
	.o(\bits16[12]~input_o ));
// synopsys translate_off
defparam \bits16[12]~input .bus_hold = "false";
defparam \bits16[12]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[13]~input (
	.i(bits16[13]),
	.ibar(gnd),
	.o(\bits16[13]~input_o ));
// synopsys translate_off
defparam \bits16[13]~input .bus_hold = "false";
defparam \bits16[13]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[14]~input (
	.i(bits16[14]),
	.ibar(gnd),
	.o(\bits16[14]~input_o ));
// synopsys translate_off
defparam \bits16[14]~input .bus_hold = "false";
defparam \bits16[14]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bits16[15]~input (
	.i(bits16[15]),
	.ibar(gnd),
	.o(\bits16[15]~input_o ));
// synopsys translate_off
defparam \bits16[15]~input .bus_hold = "false";
defparam \bits16[15]~input .simulate_z_as = "z";
// synopsys translate_on

assign bits32[0] = \bits32[0]~output_o ;

assign bits32[1] = \bits32[1]~output_o ;

assign bits32[2] = \bits32[2]~output_o ;

assign bits32[3] = \bits32[3]~output_o ;

assign bits32[4] = \bits32[4]~output_o ;

assign bits32[5] = \bits32[5]~output_o ;

assign bits32[6] = \bits32[6]~output_o ;

assign bits32[7] = \bits32[7]~output_o ;

assign bits32[8] = \bits32[8]~output_o ;

assign bits32[9] = \bits32[9]~output_o ;

assign bits32[10] = \bits32[10]~output_o ;

assign bits32[11] = \bits32[11]~output_o ;

assign bits32[12] = \bits32[12]~output_o ;

assign bits32[13] = \bits32[13]~output_o ;

assign bits32[14] = \bits32[14]~output_o ;

assign bits32[15] = \bits32[15]~output_o ;

assign bits32[16] = \bits32[16]~output_o ;

assign bits32[17] = \bits32[17]~output_o ;

assign bits32[18] = \bits32[18]~output_o ;

assign bits32[19] = \bits32[19]~output_o ;

assign bits32[20] = \bits32[20]~output_o ;

assign bits32[21] = \bits32[21]~output_o ;

assign bits32[22] = \bits32[22]~output_o ;

assign bits32[23] = \bits32[23]~output_o ;

assign bits32[24] = \bits32[24]~output_o ;

assign bits32[25] = \bits32[25]~output_o ;

assign bits32[26] = \bits32[26]~output_o ;

assign bits32[27] = \bits32[27]~output_o ;

assign bits32[28] = \bits32[28]~output_o ;

assign bits32[29] = \bits32[29]~output_o ;

assign bits32[30] = \bits32[30]~output_o ;

assign bits32[31] = \bits32[31]~output_o ;

endmodule
